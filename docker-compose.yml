services:
  # 1️⃣ NGINX (serving test.html)
  nginx:
    image: nginx:stable-alpine
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html:ro
      - ./dev-only/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - test_network

  # 2️⃣ Node (for running test.js)
  node:
    build:
      context: .
      dockerfile: Dockerfile.node
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html/js
    command: npm test
    depends_on:
      - nginx
    environment:
      - NODE_ENV=test
      - TEST_URL=http://nginx:80/test.html  # Use the service name 'nginx' to access the NGINX container
    networks:
      - test_network

# ✅ Properly defining the missing test_network
networks:
  test_network:
    name: test_network
    driver: bridge
    # driver_opts:
    #   com.docker.network.bridge.name: test_network
    #   com.docker.network.bridge.default_bridge: "false"
    #   com.docker.network.bridge.enable_icc: "false"
    #   com.docker.network.bridge.enable_ip_masquerade: "false"
    #   com.docker.network.bridge.host_binding_ipv4: 0.0.0.0
    #   com.docker.network.bridge.host_binding_ipv6: ::1
    #   com.docker.network.driver.mtu: 1500  # Optional MTU setting
      

# Uncomment the following sections if you need to run WordPress, MariaDB, or PHPUnit
  # ❌ Commented out: WordPress, MariaDB, and PHPUnit
  # # 3️⃣ WordPress (for full application testing)
  # wordpress:
  #   image: wordpress:6.8.1-php8.1-fpm-alpine
  #   volumes:
  #     - .:/var/www/html
  #   environment:
  #     WORDPRESS_DB_HOST: db:3306
  #     WORDPRESS_DB_USER: wp_test
  #     WORDPRESS_DB_PASSWORD: password
  #     WORDPRESS_DB_NAME: wordpress_test
  #   depends_on:
  #     - db

  # # 4️⃣ MariaDB (for WordPress database)
  # db:
  #   image: mariadb:10.5
  #   command: --default-authentication-plugin=mysql_native_password
  #   environment:
  #     MYSQL_DATABASE: wordpress_test
  #     MYSQL_USER: wp_test
  #     MYSQL_PASSWORD: password
  #     MYSQL_ROOT_PASSWORD: rootpassword
  #   volumes:
  #     - db_data:/var/lib/mysql

  # # 5️⃣ PHPUnit (isolated test runner)
  # phpunit:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.phpunit
  #   volumes:
  #     - .:/var/www/html
  #   depends_on:
  #     - db

volumes:
  db_data: